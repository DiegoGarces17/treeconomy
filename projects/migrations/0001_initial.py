# Generated by Django 3.0.5 on 2022-07-09 00:58

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Bill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=150)),
                ('identificacion', models.CharField(max_length=150)),
                ('beneficiario', models.CharField(max_length=150)),
                ('id_beneficiario', models.CharField(max_length=150)),
                ('url', models.URLField()),
                ('address_line_1', models.CharField(max_length=150)),
                ('address_line_2', models.CharField(max_length=150)),
                ('address_type', models.CharField(choices=[('B', 'Billing'), ('S', 'Shipping')], max_length=1)),
                ('default', models.BooleanField(default=False)),
                ('city', models.CharField(max_length=100)),
                ('zip_code', models.CharField(max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Bills',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('ordered_date', models.DateTimeField(blank=True, null=True)),
                ('ordered', models.BooleanField(default=False)),
                ('bill', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bill', to='projects.Bill')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Plat',
            fields=[
                ('plat_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('n_trees', models.PositiveIntegerField()),
                ('x1', models.FloatField()),
                ('x2', models.FloatField()),
                ('y1', models.FloatField()),
                ('y2', models.FloatField()),
            ],
            options={
                'verbose_name': 'Plat',
                'verbose_name_plural': 'Plats',
            },
        ),
        migrations.CreateModel(
            name='Pricing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
                ('stripe_price_id', models.CharField(max_length=50)),
                ('price', models.IntegerField(default=0)),
                ('currency', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('stripe_subscription_id', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=100)),
                ('n_projects', models.PositiveIntegerField()),
                ('pricing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='projects.Pricing')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Subscription',
                'verbose_name_plural': 'Subscriptions',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='ProjectTrackingRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heigth', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('dch', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('volume', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('captured_co2', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('age', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('record_date', models.DateField()),
                ('plat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Plat')),
            ],
            options={
                'verbose_name': 'Project record',
                'verbose_name_plural': 'Project records',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('name', models.CharField(max_length=120)),
                ('slug', models.SlugField(primary_key=True, serialize=False, unique=True)),
                ('coordinates', models.CharField(max_length=120)),
                ('n_trees', models.PositiveIntegerField()),
                ('plantation_date', models.DateField()),
                ('total_invested', models.FloatField()),
                ('total_unit_initial', models.FloatField()),
                ('tree_type', models.CharField(max_length=120)),
                ('ica_register', models.CharField(blank=True, max_length=120, null=True)),
                ('n_hectares', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('trees_left', models.PositiveIntegerField(blank=True, null=True)),
                ('project_link', models.URLField(blank=True, max_length=120, null=True)),
                ('payment_collection', models.FloatField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/projects', verbose_name='Imagen')),
                ('price_onepayment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projects_onepayment', to='projects.Pricing')),
                ('price_subscription', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projects_subscription', to='projects.Pricing')),
            ],
        ),
        migrations.AddField(
            model_name='plat',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Project'),
        ),
        migrations.CreateModel(
            name='PercentageRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_date', models.DateField(unique=True)),
                ('growth_avg', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('dch_avg', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('volume_growth_avg', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('growth_pctg', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('dch_pctg', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('volume_growth_pctg', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('total_unit_current', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('profitability', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('project_value', models.FloatField(blank=True, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Project')),
            ],
            options={
                'verbose_name': 'Percentage record',
                'verbose_name_plural': 'Percentage records',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('type_inversion', models.CharField(choices=[('M', 'Monthly subscription'), ('O', 'One payment')], default='M', max_length=1, verbose_name='Inversion type')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='projects.Order')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Project')),
            ],
        ),
    ]
